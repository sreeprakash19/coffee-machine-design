import { ChannelDef, Conditional, FieldDef, ValueDef, ValueOrGradientOrText } from '../../../channeldef';
import { VgEncodeEntry, VgValueRef } from '../../../vega.schema';
import { UnitModel } from '../../unit';
/**
 * Return a mixin that includes a Vega production rule for a Vega-Lite conditional channel definition.
 * or a simple mixin if channel def has no condition.
 */
export declare function wrapCondition<FD extends FieldDef<any>, V extends ValueOrGradientOrText>(model: UnitModel, channelDef: ChannelDef<FD, V>, vgChannel: string, refFn: (cDef: ChannelDef<FD, V> | Conditional<ValueDef<V> | FD>) => VgValueRef): VgEncodeEntry;
//# sourceMappingURL=conditional.d.ts.map