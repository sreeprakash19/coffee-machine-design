{"version":3,"file":"rule.js","sourceRoot":"","sources":["../../../../src/compile/mark/rule.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AAEnC,MAAM,CAAC,MAAM,IAAI,GAAiB;IAChC,MAAM,EAAE,MAAM;IACd,WAAW,EAAE,CAAC,KAAgB,EAAE,EAAE;QAChC,MAAM,EAAC,OAAO,EAAC,GAAG,KAAK,CAAC;QACxB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;QAE9B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE;YACnG,uDAAuD;YACvD,OAAO,EAAE,CAAC;SACX;QAED,mEACK,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE;YAC/B,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,QAAQ;SACf,CAAC,GACC,MAAM,CAAC,oBAAoB,CAAC,GAAG,EAAE,KAAK,EAAE;YACzC,UAAU,EAAE,MAAM,KAAK,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK;YACzD,WAAW,EAAE,WAAW;YACxB,KAAK,EAAE,MAAM,KAAK,UAAU,CAAC,iDAAiD;SAC/E,CAAC,GACC,MAAM,CAAC,oBAAoB,CAAC,GAAG,EAAE,KAAK,EAAE;YACzC,UAAU,EAAE,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK;YACvD,WAAW,EAAE,WAAW;YACxB,KAAK,EAAE,MAAM,KAAK,YAAY,CAAC,+CAA+C;SAC/E,CAAC,GACC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;YACnC,SAAS,EAAE,aAAa,CAAC,gCAAgC;SAC1D,CAAC,EACF;IACJ,CAAC;CACF,CAAC","sourcesContent":["import {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as encode from './encode';\n\nexport const rule: MarkCompiler = {\n  vgMark: 'rule',\n  encodeEntry: (model: UnitModel) => {\n    const {markDef} = model;\n    const orient = markDef.orient;\n\n    if (!model.encoding.x && !model.encoding.y && !model.encoding.latitude && !model.encoding.longitude) {\n      // Show nothing if we have none of x, y, lat, and long.\n      return {};\n    }\n\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        orient: 'ignore',\n        size: 'ignore'\n      }),\n      ...encode.pointOrRangePosition('x', model, {\n        defaultPos: orient === 'horizontal' ? 'zeroOrMin' : 'mid',\n        defaultPos2: 'zeroOrMax',\n        range: orient !== 'vertical' // include x2 for horizontal or line segment rule\n      }),\n      ...encode.pointOrRangePosition('y', model, {\n        defaultPos: orient === 'vertical' ? 'zeroOrMin' : 'mid',\n        defaultPos2: 'zeroOrMax',\n        range: orient !== 'horizontal' // include y2 for vertical or line segment rule\n      }),\n      ...encode.nonPosition('size', model, {\n        vgChannel: 'strokeWidth' // VL's rule size is strokeWidth\n      })\n    };\n  }\n};\n"]}