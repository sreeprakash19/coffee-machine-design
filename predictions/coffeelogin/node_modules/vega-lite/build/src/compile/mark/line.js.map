{"version":3,"file":"line.js","sourceRoot":"","sources":["../../../../src/compile/mark/line.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AAEnC,MAAM,CAAC,MAAM,IAAI,GAAiB;IAChC,MAAM,EAAE,MAAM;IACd,WAAW,EAAE,CAAC,KAAgB,EAAE,EAAE;QAChC,iFACK,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE;YAC/B,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE,QAAQ;SACjB,CAAC,GACC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,GACrD,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,GACrD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;YACnC,SAAS,EAAE,aAAa,CAAC,gCAAgC;SAC1D,CAAC,GACC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EACxB;IACJ,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAiB;IACjC,MAAM,EAAE,OAAO;IACf,WAAW,EAAE,CAAC,KAAgB,EAAE,EAAE;QAChC,iFACK,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE;YAC/B,KAAK,EAAE,QAAQ;YACf,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,QAAQ;SACjB,CAAC,GACC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,GACrD,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,GACrD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,GACjC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EACxB;IACJ,CAAC;CACF,CAAC","sourcesContent":["import {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as encode from './encode';\n\nexport const line: MarkCompiler = {\n  vgMark: 'line',\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        size: 'ignore',\n        orient: 'ignore'\n      }),\n      ...encode.pointPosition('x', model, {defaultPos: 'mid'}),\n      ...encode.pointPosition('y', model, {defaultPos: 'mid'}),\n      ...encode.nonPosition('size', model, {\n        vgChannel: 'strokeWidth' // VL's line size is strokeWidth\n      }),\n      ...encode.defined(model)\n    };\n  }\n};\n\nexport const trail: MarkCompiler = {\n  vgMark: 'trail',\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        size: 'include',\n        orient: 'ignore'\n      }),\n      ...encode.pointPosition('x', model, {defaultPos: 'mid'}),\n      ...encode.pointPosition('y', model, {defaultPos: 'mid'}),\n      ...encode.nonPosition('size', model),\n      ...encode.defined(model)\n    };\n  }\n};\n"]}