{"version":3,"file":"offset.js","sourceRoot":"","sources":["../../../../../src/compile/mark/encode/offset.ts"],"names":[],"mappings":"AAMA,MAAM,UAAU,SAAS,CAAC,OAAwB,EAAE,OAAgB;IAClE,MAAM,aAAa,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAoD,CAAC,CAAC,2DAA2D;IAE1J,qDAAqD;IACrD,MAAM,kBAAkB,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;IAClD,IAAI,kBAAkB,EAAE;QACtB,OAAO,kBAAkB,CAAC;KAC3B;IAED,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["/**\n * Utility files for producing Vega ValueRef for marks\n */\nimport {PositionChannel} from '../../../channel';\nimport {MarkDef} from '../../../mark';\n\nexport function getOffset(channel: PositionChannel, markDef: MarkDef) {\n  const offsetChannel = (channel + 'Offset') as 'xOffset' | 'yOffset' | 'x2Offset' | 'y2Offset'; // Need to cast as the type can't be inferred automatically\n\n  // TODO: in the future read from encoding channel too\n  const markDefOffsetValue = markDef[offsetChannel];\n  if (markDefOffsetValue) {\n    return markDefOffsetValue;\n  }\n\n  return undefined;\n}\n"]}